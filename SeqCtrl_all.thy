            (*-------------------------------------------*            |                                            |            |          Liveness of Specifications        |            |                                            |            *-------------------------------------------*)theory SeqCtrl_all  imports MBP_specbegin(*************************************************************         1. ParaAlgo         2.          3.          4.  *************************************************************)(* ----------------------------------------- * |                deadlock free              | * ----------------------------------------- *)theorem SeqCtrl_DeadlockFree:  "finite Blks ==> dag Blks Deps    ==> DeadlockFree (SeqCtrl Blks Deps) (obsEvent Blks) finish"  apply (simp add: DeadlockFree_def)  apply (simp add: failures_def)  apply (intro allI impI)  apply (elim exE conjE)  apply (simp add: SeqCtrl_def)  apply (insert Seq_trns[of Blks Deps])   apply (drule_tac x="s" in spec)   apply (drule_tac x="{}" in spec)   apply (drule_tac x="P'" in spec)  apply (simp)  apply (elim exE conjE disjE)  (* 1 *)   apply (simp)   apply (simp add: refs_def)   apply (rotate_tac 5)   apply (erule contrapos_pp)   apply (simp (no_asm) add: subset_iff)   apply (case_tac "S' = Blks")    (* finish *)    apply (rule_tac x="finish" in exI)    apply (simp add: obsEvent_def)    apply (simp add: trn_ex_def)    apply (rule_tac x="STOP" in exI)    apply (simp add: Seq_trn_finish)    (* blk *)    apply (insert enable_nonempty_all[of Blks Deps])    apply (drule_tac x="S'" in spec)    apply (simp)    apply (drule mp)     apply (force)    apply (subgoal_tac "EX n. n : enable Blks Deps S'")    apply (erule exE)    apply (rule_tac x="blk n" in exI)    apply (simp add: obsEvent_def)    apply (rule conjI)     apply (simp add: enable_def)    apply (simp add: trn_ex_def)    apply (rule_tac x="$Seq Blks Deps (insert n S')" in exI)    apply (simp add: Seq_trn_blk)    apply (simp add: enable_def)    apply (force)   apply (simp add: rem_tau_append)  doneend